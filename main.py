from  config import *
from  keyboard import *

@bot.message_handler(commands=['start'])
def start(message):
    chat_id = message.from_user.id
    username = message.from_user.username
    with sqlite3.connect('users.db') as conn:
        cur = conn.cursor()
        cur.execute("""CREATE TABLE IF NOT EXISTS user(username TEXT, user_id INTEGER);""")
        cur.execute("SELECT * FROM user WHERE `user_id` = '{}'".format(chat_id))
        row = cur.fetchall()
        if len(row) == 0:
            cur.execute("INSERT INTO `user` (`username`, `user_id`) VALUES(?,?)",
                        (username, chat_id,))
    text = '<b>SORGENY</b> ‚Äî –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –ø–æ–ª—É—á–∏—Ç—å —Å–∫—Ä—ã—Ç—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å —Ä–∞–∑–Ω—ã—Ö –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Ä–µ—Å—É—Ä—Å–æ–≤.\n\n–£ –º–µ–Ω—è –µ—Å—Ç—å –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–ª–∏—Ç—ã—Ö —Ö–∞–π–¥–æ–≤ —Å —Ä–∞–∑–Ω—ã—Ö –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –ø–ª–æ—â–∞–¥–æ–∫. –ë–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ –±–æ—Ç–µ –≤—ã —Å–º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –≤ —Ä–∞–∑–¥–µ–ª–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è.'
    img = open ('welc.webp', 'rb')
    bot.send_photo(chat_id, img, caption=text, reply_markup=main_keyboard(), parse_mode='html')

@bot.message_handler(commands=['admin'])
def admin(message):
    chat_id = message.from_user.id
    if chat_id in admins:
        bot.send_message(chat_id, 'üõ†Ô∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å.', reply_markup=admin_keyboard())


@bot.message_handler(content_types=['text'])
def text(message):
    chat_id = message.from_user.id
    if message.text == 'üì• –ü–æ–ª—É—á–∏—Ç—å —Ö–∞–π–¥':
        inline = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
        btn = types.KeyboardButton(text='‚≠êIQOS 2.4+‚≠ê')
        btn2 = types.KeyboardButton(text='üåüIQOS 3 DUOüåü')
        btn3 = types.KeyboardButton(text='üî•IQOS 3 Multiüî•')
        btn4 = types.KeyboardButton(text='üîô –ù–∞–∑–∞–¥')
        btn5 = types.KeyboardButton(text='üîù –ì–ª–∞–≤–Ω–æ–µ –ú–µ–Ω—é')
        inline.add(btn, btn2)
        inline.add(btn3)
        inline.add(btn4, btn5)
        bot.send_message(chat_id, '‚ú®IQOS‚ú®', reply_markup=inline)
    elif message.text == '–†–∞—Å—Å—ã–ª–∫–∞' and chat_id in admins:
        message = bot.send_message(chat_id, 'üíÅüèª‚Äç‚ôÄÔ∏è –í–≤–µ–¥–∏—Ç–µ *—Å–æ–æ–±—â–µ–Ω–∏–µ* –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏', parse_mode="Markdown")
        bot.register_next_step_handler(message, add_message)
    elif message.text == '–ö–æ–ª-–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π' and chat_id in admins:
        with sqlite3.connect('users.db') as conn:
            cur = conn.cursor()
            cur.execute("SELECT * FROM user")
            row = cur.fetchall()
            bot.send_message(message.from_user.id, '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ' + str(len(row)))
    elif message.text == '–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π' and chat_id in admins:
        with sqlite3.connect('users.db') as conn:
            cur = conn.cursor()
            cur.execute("SELECT * from `user`")
            row = cur.fetchall()
            w_file = open("users.csv", mode="w", encoding='utf-8')
            file_writer = csv.writer(w_file, delimiter=",", lineterminator="\r")
            for rows in row:
                file_writer.writerow(rows)
            w_file.close()
            with open(curdir + "/users.csv", "r") as file:
                bot.send_document(chat_id, file)

bot.polling()
